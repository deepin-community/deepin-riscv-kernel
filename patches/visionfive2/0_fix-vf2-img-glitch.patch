From 85cae220f32ede3674ad720c63620bc3cc1df8a3 Mon Sep 17 00:00:00 2001
From: Icenowy Zheng <uwu@icenowy.me>
Date: Sun, 31 Mar 2024 18:45:38 +0800
Subject: [PATCH] drm/verisilicon: hack GEM mapping address to map vram
 uncached

Signed-off-by: Icenowy Zheng <uwu@icenowy.me>
---
 drivers/gpu/drm/verisilicon/vs_gem.c | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/verisilicon/vs_gem.c b/drivers/gpu/drm/verisilicon/vs_gem.c
index bc5505fb5b41bc..e15feaf5715c48 100644
--- a/drivers/gpu/drm/verisilicon/vs_gem.c
+++ b/drivers/gpu/drm/verisilicon/vs_gem.c
@@ -332,6 +332,7 @@ static int vs_gem_mmap_obj(struct drm_gem_object *obj,
 	struct vs_gem_object *vs_obj = to_vs_gem_object(obj);
 	struct drm_device *drm_dev = vs_obj->base.dev;
 	unsigned long vm_size;
+	dma_addr_t uc_addr;
 	int ret = 0;
 
 	vm_size = vma->vm_end - vma->vm_start;
@@ -343,12 +344,16 @@ static int vs_gem_mmap_obj(struct drm_gem_object *obj,
 	if (!vs_obj->get_pages) {
 		vma->vm_flags &= ~VM_PFNMAP;
 
+		uc_addr = vs_obj->dma_addr;
+		if ((uc_addr >= 0x40000000UL) && (uc_addr < 0x440000000UL))
+			uc_addr += 0x400000000UL;
+
 		ret = dma_mmap_attrs(to_dma_dev(drm_dev), vma, vs_obj->cookie,
-					vs_obj->dma_addr, vs_obj->size,
+					uc_addr, vs_obj->size,
 					 vs_obj->dma_attrs);
 	} else {
-		u32 i, nr_pages, pfn = 0U;
-		unsigned long start;
+		u32 i, nr_pages;
+		unsigned long start, pfn = 0U;
 
 		vma->vm_page_prot = pgprot_writecombine(vma->vm_page_prot);
 		vma->vm_flags |= VM_IO | VM_DONTCOPY | VM_DONTEXPAND |
@@ -360,6 +365,8 @@ static int vs_gem_mmap_obj(struct drm_gem_object *obj,
 		for (i = 0; i < nr_pages; i++) {
 			pfn = page_to_pfn(vs_obj->pages[i]);
 
+			if ((pfn >= 0x40000UL) && (pfn < 0x440000UL))
+				pfn += 0x400000UL;
 			ret = remap_pfn_range(vma, start, pfn, PAGE_SIZE,
 						vma->vm_page_prot);
 			if (ret < 0)
